Draft Manual for ESP-909 Evolution
Simple operating guide 
Slider2732 - November 2021


Contents
--------
Play It!
Play Through
Pattern Copy
Pattern Chain
Tempo
Swing (shuffle)
Metronome
Pitch Shifting
MIDI
Construction notes
Practical Workflow
Adding your own samples




Play It!
--------
When the USB cable is connected to the build, the unit powers up into Live mode.
Live mode is denoted by the LED being constantly lit. 
Press any drum button to hear each sound, practice patterns, add a live layer to a pre-recorded track etc.
When in this mode, the Function button on the right side end of the drum buttons becomes very powerful.
Press key 1 (Bass Drum) along with Function to execute Pattern Copy.
Press key 2 (Snare) along with Function to execute Pattern Chain.
Press key 3 (Low Tom) along with Function to enter Tap Tempo mode.
Press key 4 (Mid Tom) along with Function to lower Swing amount.
Press key 5 (High Tom) along with Function to increase Swing amount.
Press key 10 (Ride) along with Function to enable Play Through ability.
More features are intended to be added.
When ready to record, press the Record/Live mode button.
Tempo can be set with the relevant pot, BPM indication is with a flash of the LED on positions 1, 9 and 11 of the 16 part pattern.
Tempo can also be set with the Tap Tempo feature detailed below.
Each drum sound will be quantized to 1/16th of the pattern.
If unhappy with a sound, press the same button again to remove it (easiest if the tempo is temporarily lowered).
To swap to pattern 2, press the Function button while pattern 1 is playing. 
To return to Live mode, press the Record/Live mode button at any time. 
To reset the drum machine, press the Reset button.


Play Through
------------
A very useful and, some would say essential feature.
Enter Live mode, by pressing the Mode button (attached to C14 of the multiplexer). 
Press key 11 (Ride) along with the Function key to enable or disable Play Through mode. Conveniently, both keys are next to each other on the end of the row of keys. Note - pressing a key first and then the Function key along with it is a 100% effective method.
The ESP-909 will immediately return to Play mode, denoted by the LED flashing to the tempo.
Any drums previously recorded will play.
You may now strike any key at any time, while the rhythm is playing and they will not be recorded.  
Switch off Play Through, by repeating the steps above. 


Pattern Copy
------------
Change to Live mode, by pressing the Mode button.
Press key 1 (Bass Drum) along with Function.
Pattern 1 will be copied to pattern 2.
The LED will turn off for 1/2 a second.
Return to Record mode, by pressing the Mode key.
Both patterns will sound the same. Changes to patterns 1 or 2 can be made, as usual. 
Pattern copy allows for a variation on pattern 2, as a backup of pattern 1, or to practice a pattern in real time while keeping pattern 1.
Note - Pattern 1 will always be copied to pattern 2, to allow the above functionality. Also, playback will begin with pattern 1, allowing you to know which pattern is which.  


Pattern Chain
-------------
Change to Live mode, by pressing the Mode button.
Press key 2 (Snare Drum) along with Function.
Pattern 2 will be added to the end of pattern 1.
The pattern length of the sequence will now be 32 beats. 
The LED will switch off for 1/2 a second. 
Return to Record mode using the Mode key.
Pattern 2 will be heard after pattern 1, the full 32 steps will play.
Note - Pressing the Function key to swap to pattern 2 results in no action.  


Tempo
-----
Tempo can be changed by using the Tempo pot.
The range is approximately 40 BPM to 200 BPM.
Indication of the tempo is given by the LED, with flashes on pattern positions 1, 9 and 11.  


Tap Tempo
---------
Tempo can also be changed by using the Tap Tempo feature.
Change to Live mode, by pressing the Mode key.
The range of BPM is 40 BPM up to however fast you can tap the input key!
Press key 3 and then the Function button.
The timer will count to 10 seconds, during which time you should tap to the beat required for the BPM.
The drum machine will then enter Play mode, where you will be able to see the BPM speed via the LED.


Swing
-----
Swing, or shuffle, is at present a simple decrease or increase on every other beat of the 16 pattern positions.
Each second beat is delayed by the swing amount, with the remaining beat time length shortened after the drum sound is fired. 
The code will be updated to Roger Linn's % method in a future update.
For now, it allows useful timing variations and experimentation with pattern structures, creating a different feel to played patterns. 
Swing can be switched between 8 levels while within Live mode.
Press drum key 4 (Mid Tom) and Function at the same time to decrease the amount. 
Or, drum key 5 (High Tom) and Function at the same time to increase the amount.  


Metronome
---------
The metronome is attached to port 13 of the Wemos microcontroller.
When the attached key is pressed, the metronome changes state, on or off.
The metronome key can be pressed at any time while in Play mode. The pattern being played will reset to position 1 and the metronome will either be heard or silent. 
Note - Switching on and off will affect both patterns. 
The metronome is off by default.


Pitch Shifting
--------------
Pitch changing of the whole drum kit is available on pin 12 of the multiplexer.
A 10K pot attached to the pin enables a speed shift, anywhere from 25kHz to 55kHz.
When used, the samples change their pitch, the tempo is unaffected.
The pot can be moved to any value while a pattern is playing.
The new speed is implemented at each pattern loop start.
A central dead zone is implemented of 44.1kHz, allowing a quick and easy return to the correct playing speed of the samples. 


MIDI
----
MIDI In and Out are implemented, but so far only MIDI Out is working on both non DAC and DAC versions.
This manual will be updated when it's fixed. 
MIDI commands in both directions will be Start, Stop, Pause and Note data. 
At the moemnt, those commands work on pin D4 for MIDI Out.
MIDI Start, Clock and Stop work with the Fake MIDI sketch and extra Arduino connected.
There is an ability to change the PPQN, if a slave device uses a different amount than 24.
Press drum key 6 (Rimshot) and Function to step through and test various PPQN amounts in Live mode. 
If the correct PPQN cannot be found, the code line to change is within the LivePlay() void. 
MIDI has been tested with a Roland TB-03 and Roland JU06A.






Construction Notes
------------------
With reference to the prototype build picture on Github. 

Components required -
Wemos D1 Mini (ESP8266)
HC4067 16 port multiplexer
Optional MAX98357A DAC
Optional Arduino to handle DAC optioned MIDI messages
15 momentary action buttons
2x 10K pot (a third may be used for volume)
MIDI circuit (Sparkfun/Adafruit etc, or homemade)
100uF 16V capacitor
47nF (473) ceramic capacitor
1x LED, with 100 ohm resistor to protect it
2 pin connector 
Large perfboard (12cm x 18cm)

A note about building with or without a DAC -
Using no DAC will output sound on the RX pin of the Wemos. The advantages include a simpler build and direct MIDI Out abilities, using pin D4 of the Wemos. Disadvantages are that the sound is far inferior, with noise evident on the decay portions of sounds.
Using a DAC brings a clean and solid output to an ESP-909 build. A disadvantage, is that no Serial method seems to work, due to the DAC taking over a pin of each Serial port. The solution, is to use what I've termed Fake MIDI, using any Arduino compatible microprocessor. Anything will work, from an ATTINY, to bare ATMEL328P, to Arduino Nano. The testing setup here uses an Arduino Nano.
Connections to the Arduino are +5V, Gnd, Wemos pin D5 to Arduino pin 2, Wemos pin D6 to pin 3. Arduino TX goes to your MIDI shields Send pin. An LED output is provided on Arduino Nano pin 10, to display when MIDI data is being sent or not. All pins can be set at the top of the ESP-909FakeMIDI.ino sketch.     

All Wemos connections can be run to a cartridge type system.
The Wemos ESP8266 pins connect to 16 pins on the edge of a perfbooard piece. 
Doing so, allows the swapping in and out of different drum machine sounds. Each drum machine being contained on a Wemos microcontroller.  
Sound banks currently being constructed are for Roland TR-909, TR-808, TR-707, CR-78, Oberheim DMX and Linn LM-1. Sound banks will be available on the same Github repository. You can also create or mix and match your own. 

The layout is up to you, here is how the prototype circuit is arranged -
Top left is the Wemos D1 Mini, connected as a TR-909 cartridge. 
Output audio is at the rear, from the DAC or RX pin. A 2 pin header connector is a simple way to enable or disable the RX pin for code uploads. 
Bottom left is the MIDI circuit. 
Top right is the Reset button, connected to GND and RST on the Wemos D1 Mini.
Top left is the status LED and On/Off switch.
Middle are the Tempo pot (10K), Swing pot (10K) and volume pot (10K).  
Middle right are the Metronome and Record/Live mode buttons.
A low pass filter circuit is on a pot in this area.
Bottom row is for the drum sounds, 1 button per sound, matching the placement of the TR-909 drum sounds. 
Bottom row right, is the Function button.
Due to the multiplexer having capacitance properties, you may find that low height buttons will trigger another sound as well. The fix, is to use taller buttons, increase spacings, or, use PC key switches and caps. The prototype build was found to suffer from the issue, buttons being replaced by ALPS key switches from a late 1980's busted laptop. 


A look through the code will determine the correct connections. 
The code has been commented with hopefully useful information. 

Here is a reference guide to those connections - 

 Wemos D1 Mini pins:
 D0 - S0
 D1 - S1     
 D2 - S2      
 D3 - S3
 D4 - MIDI Out without DAC, or LRC of DAC
 D5 - Fake MIDI Out for Start/Clock/Stop
 D6 - Fake MIDI In
 D7 - Tempo LED
 D8 - BCLK of DAC
 A0 - Input from multiplexer
 RX - Audio output without DAC, or DIN of DAC
 TX -

 16 channel Multiplexer
 port[0] to [10] drum sounds
 port[11] Alternative pattern / Function key
 port[12] Pitch Pot
 port[13] Metronome On/Off
 port[14] Record / Live play key
 port[15] Tempo pot
 Wire multiplexer - EN to GND, SIG to A0, VCC to 3v3 and GND to GND

 Arduino pins (Arduino Nano)
 +5V
 Gnd
 D2 from Wemos D5
 D3 to Wemos D6
 TX to MIDI shield Send pin



Practical Workflow
------------------
It may be daunting to use something like this project for the first time. Here is my own workflow, whch may be of help.
Turn on the ESP-909.
A sound will be heard (allowing a check of audio hardware).
Then, if MIDI is connected, a short run of notes will be heard on the receiving device (allowing a check of the MIDI connection). 
The ESP-909 is now in Live mode, where several functions are available. 
I tend to test drum volume levels by pressing several drum keys, then press the mode key and switch on the metronome. 
Beats can be put in their correct places by following the metronome sound. The tempo can also be adjusted at any time with the tempo pot. 
Swap to pattern 2 by pressing the Function key and enter some more drum sounds.  
Press the metronome key when no longer needed.
The rest of the parts of the pattern(s) are then added.
Pressing drum key 11 and Function allows play through, for fills and extras during pattern playback.   
The pattern is recorded to a Zoom R8 8 track recorder, along with anything connected to MIDI.
Quick, logical and effective is the aim.   



Adding your own samples
-----------------------
A source of many problems, because most examples found online will apply to 8 bit samples. 
The project uses 16 bit, 44.1kHz samples.

Here is how to manage your own sounds -
Firstly, find samples that you would like to use, many places have free downloads of the classic machines. 
If you have a modern Apple device, iTunes will apparently take care of sample conversion to C++.
For windows users, there are programs such as Wav2c.

For Linux Mint, this command works really well: od -s  --address-radix=none Kick.wav
Where Kick.wav is the sample you would like to see. 
When used in the Terminal, within the directory where samples are located, the line will show the wav file's contents.
Copy and paste the output to a text editor.
Delete the directory information and the first 44 bytes of data (wav's contain text information at the start).
Replace the spaces between numbers, with a search and replace of spaces, to ',' commas. I find it best to tap 5 spaces in the search, press 'Replace All', delete a space and repeat. Finally in the text editor, search for ",," and replace with ","
The file should now contain numbers such as 23187, -11859, 14453, 13673.
Make a mental note of the file size in Words, most editors have the feature. 
Copy the altered text file to the relevant drum sound in Drums.h and replace the bytes total before PROGMEM with the number shown as Words in the text editor.  
Lastly, change the drum bytes total at the top of Drums.h, example - BD16LEN = 4987UL may become BD16LEN = 5489UL
All done. The replaced drum is ready to be played. 
